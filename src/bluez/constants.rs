#![allow(dead_code)]

pub const HCI_COMMAND_PKT: u8 = 0x01;

// hci.h
pub const HCI_FILTER: i32 = 2;
pub const HCI_EVENT_PKT: i32 = 0x04;
pub const HCI_ACLDATA_PKT: i32 = 0x02;
pub const HCI_LE_META_EVENT: i32 = 0x3E;

pub const HCI_CHANNEL_RAW: u16 = 0;
pub const HCI_CHANNEL_USER: u16 = 1;
pub const HCI_CHANNEL_MONITOR: u16 = 2;
pub const HCI_CHANNEL_CONTROL: u16 = 3;
pub const HCI_CHANNEL_LOGGING: u16 = 4;

pub const ACL_START_NO_FLUSH: u16 = 0x00;
pub const ACL_CONT: u16 = 0x01;
pub const ACL_START: u16 = 0x02;
pub const HCI_OE_USER_ENDED_CONNECTION: u8 = 0x13;

// bluetooth.h
pub const SOL_HCI: i32 = 0;

pub const ATT_CID: u16 = 4;
pub const ATT_OP_ERROR_RESP: u8 = 0x01;
pub const ATT_OP_EXCHANGE_MTU_REQ: u8 = 0x02;
pub const ATT_OP_EXCHANGE_MTU_RESP: u8 = 0x03;
pub const ATT_OP_READ_BY_TYPE_REQ: u8 = 0x08;
pub const ATT_OP_READ_BY_TYPE_RESP: u8 = 0x09;
pub const ATT_OP_READ_REQ: u8 = 0x0a;
pub const ATT_OP_READ_RESP: u8 = 0x0b;
pub const ATT_OP_READ_BY_GROUP_REQ: u8 = 0x10;
pub const ATT_OP_READ_BY_GROUP_RESP: u8 = 0x11;
pub const ATT_OP_WRITE_REQ: u8 = 0x12;
pub const ATT_OP_WRITE_RESP: u8 = 0x13;
pub const ATT_OP_VALUE_NOTIFICATION: u8 = 0x1b;
pub const ATT_OP_WRITE_CMD: u8 = 0x52;

pub const GATT_CHARAC_UUID: u16 = 0x2803;

pub const GATT_CLIENT_CHARAC_CFG_UUID: u16 = 0x2902;
pub const GATT_SERVER_CHARAC_CFG_UUID: u16 = 0x2903;

pub const EVT_DISCONN_COMPLETE: u8 = 0x05;
pub const EVT_ENCRYPT_CHANGE: u8 = 0x08;
pub const EVT_CMD_COMPLETE: u8 = 0x0e;
pub const EVT_CMD_STATUS: u8 = 0x0f;
pub const EVT_LE_META_EVENT: u8 = 0x3e;

pub const EVT_LE_CONN_COMPLETE: u8 = 0x01;
pub const EVT_LE_ADVERTISING_REPORT: u8 = 0x02;
pub const EVT_LE_CONN_UPDATE_COMPLETE: u8 = 0x03;

pub const OGF_HOST_CTL: u8 = 0x03;
pub const OCF_SET_EVENT_MASK: u16 = 0x0001;
pub const OCF_RESET: u16 = 0x0003;
pub const OCF_READ_LE_HOST_SUPPORTED: u16 = 0x006C;
pub const OCF_WRITE_LE_HOST_SUPPORTED: u16 = 0x006D;

pub const OGF_LINK_CTL: u8 = 0x01;
pub const OCF_DISCONNECT: u16 = 0x0006;

pub const OGF_INFO_PARAM: u8 = 0x04;
pub const OCF_READ_LOCAL_VERSION: u16 = 0x0001;
pub const OCF_READ_BD_ADDR: u16 = 0x0009;

pub const OGF_STATUS_PARAM: u8 = 0x05;
pub const OCF_READ_RSSI: u16 = 0x0005;

pub const OGF_LE_CTL: u8 = 0x08;
pub const OCF_LE_SET_EVENT_MASK: u16 = 0x0001;
pub const OCF_LE_SET_SCAN_PARAMETERS: u16 = 0x000b;
pub const OCF_LE_SET_SCAN_ENABLE: u16 = 0x000c;
pub const OCF_LE_CREATE_CONN: u16 = 0x000d;
pub const OCF_LE_CONN_UPDATE: u16 = 0x0013;
pub const OCF_LE_START_ENCRYPTION: u16 = 0x0019;

pub const LE_SET_SCAN_PARAMETERS_CMD: u16 = OCF_LE_SET_SCAN_PARAMETERS | (OGF_LE_CTL as u16) << 10;
pub const LE_SET_SCAN_ENABLE_CMD: u16 = OCF_LE_SET_SCAN_ENABLE | (OGF_LE_CTL as u16) << 10;
pub const LE_CREATE_CONN_CMD: u16 = OCF_LE_CREATE_CONN | ((OGF_LE_CTL as u16) << 10);
pub const DISCONNECT_CMD: u16 = OCF_DISCONNECT | (OGF_LINK_CTL as u16) << 10;

pub const BTPROTO_HCI: i32 = 1;

// Bluenrg defines

// GAP const
pub const ACI_GAP_SET_NON_DISCOVERABLE: u16 = 0xFC81; // cid:0x01
pub const ACI_GAP_SET_LIMITED_DISCOVERABLE: u16 = 0xFC82; // cid:0x02
pub const ACI_GAP_SET_DISCOVERABLE: u16 = 0xFC83; // cid:0x03
pub const ACI_GAP_SET_DIRECT_CONNECTABLE: u16 = 0xFC84; // cid:0x04
pub const ACI_GAP_SET_IO_CAPABILITY: u16 = 0xFC85; // cid:0x05
pub const ACI_GAP_SET_AUTH_REQUIREMENT: u16 = 0xFC86; // cid:0x06
pub const ACI_GAP_SET_AUTHOR_REQUIREMENT: u16 = 0xFC87; // cid:0x07
pub const ACI_GAP_PASS_KEY_RESPONSE: u16 = 0xFC88; // cid:0x08
pub const ACI_GAP_AUTHORIZATION_RESPONSE: u16 = 0xFC89; // cid:0x09
pub const ACI_GAP_INIT: u16 = 0xFC8A; // cid:0x0A
pub const ACI_GAP_SET_NON_CONNECTABLE: u16 = 0xFC8B; // cid:0x0B
pub const ACI_GAP_SET_UNDIRECTED_CONNECTABLE: u16 = 0xFC8C; // cid:0x0C
pub const ACI_GAP_SLAVE_SECURITY_REQUEST: u16 = 0xFC8D; // cid:0x0D
pub const ACI_GAP_UPDATE_ADV_DATA: u16 = 0xFC8E; // cid:0x0E
pub const ACI_GAP_DELETE_AD_TYPE: u16 = 0xFC8F; // cid:0x0F
pub const ACI_GAP_GET_SECURITY_LEVEL: u16 = 0xFC90; // cid:0x10
pub const ACI_GAP_SET_EVENT_MASK: u16 = 0xFC91; // cid:0x11
pub const ACI_GAP_CONFIGURE_WHITELIST: u16 = 0xFC92; // cid:0x12
pub const ACI_GAP_TERMINATE: u16 = 0xFC93; // cid:0x13
pub const ACI_GAP_CLEAR_SECURITY_DATABASE: u16 = 0xFC94; // cid:0x14
pub const ACI_GAP_ALLOW_REBOND: u16 = 0xFC95; // cid:0x15
pub const ACI_GAP_START_LIMITED_DISCOVERY_PROC: u16 = 0xFC96; // cid:0x16
pub const ACI_GAP_START_GENERAL_DISCOVERY_PROC: u16 = 0xFC97; // cid:0x17
pub const ACI_GAP_START_NAME_DISCOVERY_PROC: u16 = 0xFC98; // cid:0x18
pub const ACI_GAP_START_AUTO_CONN_ESTABLISHMENT: u16 = 0xFC99; // cid:0x19
pub const ACI_GAP_START_GENERAL_CONN_ESTABLISHMENT: u16 = 0xFC9A; // cid:0x1A
pub const ACI_GAP_START_SELECTIVE_CONN_ESTABLISHMENT: u16 = 0xFC9B; // cid:0x1B
pub const ACI_GAP_CREATE_CONNECTION: u16 = 0xFC9C; // cid:0x1C
pub const ACI_GAP_TERMINATE_GAP_PROCEDURE: u16 = 0xFC9D; // cid:0x1D
pub const ACI_GAP_START_CONNECTION_UPDATE: u16 = 0xFC9E; // cid:0x1E
pub const ACI_GAP_SEND_PAIRING_REQUEST: u16 = 0xFC9F; // cid:0x1F
pub const ACI_GAP_RESOLVE_PRIVATE_ADDRESS: u16 = 0xFCA0; // cid:0x20
pub const ACI_GAP_GET_BONDED_DEVICES: u16 = 0xFCA3; // cid:0x23

// GATT
pub const ACI_GATT_INIT: u16 = 0xFD01; // 0x01
pub const ACI_GATT_ADD_SERV: u16 = 0xFD02; // 0x02
pub const ACI_GATT_INCLUDE_SERVICE: u16 = 0xFD03; // 0x03
pub const ACI_GATT_ADD_CHAR: u16 = 0xFD04; // 0x04
pub const ACI_GATT_ADD_CHAR_DESC: u16 = 0xFD05; // 0x05
pub const ACI_GATT_UPDATE_CHAR_VALUE: u16 = 0xFD06; // 0x06
pub const ACI_GATT_DEL_CHAR: u16 = 0xFD07; // 0x07
pub const ACI_GATT_DEL_SERVICE: u16 = 0xFD08; // 0x08
pub const ACI_GATT_DEL_INCLUDE_SERVICE: u16 = 0xFD09; // 0x09
pub const ACI_GATT_SET_EVENT_MASK: u16 = 0xFD0A; // 0x0A
pub const ACI_GATT_EXCHANGE_CONFIGURATION: u16 = 0xFD0B; // 0x0B
pub const ACI_ATT_FIND_INFORMATION_REQ: u16 = 0xFD0C; // 0x0C
pub const ACI_ATT_FIND_BY_TYPE_VALUE_REQ: u16 = 0xFD0D; // 0x0D
pub const ACI_ATT_READ_BY_TYPE_REQ: u16 = 0xFD0E; // 0x0E
pub const ACI_ATT_READ_BY_GROUP_TYPE_REQ: u16 = 0xFD0F; // 0x0F
pub const ACI_ATT_PREPARE_WRITE_REQ: u16 = 0xFD10; // 0x10
pub const ACI_ATT_EXECUTE_WRITE_REQ: u16 = 0xFD11; // 0x11
pub const ACI_GATT_DISC_ALL_PRIM_SERVICES: u16 = 0xFD12; // 0x12
pub const ACI_GATT_DISC_PRIM_SERVICE_BY_UUID: u16 = 0xFD13; // 0x13
pub const ACI_GATT_FIND_INCLUDED_SERVICES: u16 = 0xFD14; // 0x14
pub const ACI_GATT_DISC_ALL_CHARAC_OF_SERV: u16 = 0xFD15; // 0x15
pub const ACI_GATT_DISC_CHARAC_BY_UUID: u16 = 0xFD16; // 0x16
pub const ACI_GATT_DISC_ALL_CHARAC_DESCRIPTORS: u16 = 0xFD17; // 0x17
pub const ACI_GATT_READ_CHARAC_VAL: u16 = 0xFD18; // 0x18
pub const ACI_GATT_READ_CHARAC_USING_UUID: u16 = 0xFD19; // 0x19
pub const ACI_GATT_READ_LONG_CHARAC_VAL: u16 = 0xFD1A; // 0x1A
pub const ACI_GATT_READ_MULTIPLE_CHARAC_VAL: u16 = 0xFD1B; // 0x1B
pub const ACI_GATT_WRITE_CHARAC_VALUE: u16 = 0xFD1C; // 0x1C
pub const ACI_GATT_WRITE_LONG_CHARAC_VAL: u16 = 0xFD1D; // 0x1D
pub const ACI_GATT_WRITE_CHARAC_RELIABLE: u16 = 0xFD1E; // 0x1E
pub const ACI_GATT_WRITE_LONG_CHARAC_DESC: u16 = 0xFD1F; // 0x1F
pub const ACI_GATT_READ_LONG_CHARAC_DESC: u16 = 0xFD20; // 0x20
pub const ACI_GATT_WRITE_CHARAC_DESCRIPTOR: u16 = 0xFD21; // 0x21
pub const ACI_GATT_READ_CHARAC_DESC: u16 = 0xFD22; // 0x22
pub const ACI_GATT_WRITE_WITHOUT_RESPONSE: u16 = 0xFD23; // 0x23
pub const ACI_GATT_SIGNED_WRITE_WITHOUT_RESP: u16 = 0xFD24; // 0x24
pub const ACI_GATT_CONFIRM_INDICATION: u16 = 0xFD25; // 0x25
pub const ACI_GATT_WRITE_RESPONSE: u16 = 0xFD26; // 0x26
pub const ACI_GATT_ALLOW_READ: u16 = 0xFD27; // 0x27
pub const ACI_GATT_SET_SECURITY_PERMISSION: u16 = 0xFD28; // 0x28
pub const ACI_GATT_SET_DESC_VALUE: u16 = 0xFD29; // 0x29
pub const ACI_GATT_READ_HANDLE_VALUE: u16 = 0xFD2A; // 0x2A
